#.2529. Maximum Count of Positive Integer and Negative Integer.

class Solution {
    public int maximumCount(int[] nums) {
        int negCount = firstNonNegativeIndex(nums); 
        int posCount = nums.length - firstPositiveIndex(nums);
        return Math.max(negCount, posCount);
    }

    // Binary search to find the first non-negative index
    private int firstNonNegativeIndex(int[] nums) {
        int left = 0, right = nums.length;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] >= 0) right = mid;
            else left = mid + 1;
        }
        return left; // This is the count of negative numbers
    }

    // Binary search to find the first positive index
    private int firstPositiveIndex(int[] nums) {
        int left = 0, right = nums.length;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] > 0) right = mid;
            else left = mid + 1;
        }
        return left; // This is the index of the first positive number
    }
}
