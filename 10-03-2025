#.3306. Count of Substrings Containing Every Vowel and K Consonants II.

import java.util.*;

class Solution {
    public long countOfSubstrings(String word, int k) {
        int n = word.length();
        Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u'));
        Map<Character, Integer> freq = new HashMap<>();
        int left = 0, consonantCount = 0, vowelCount = 0, result = 0;
        
        for (int right = 0; right < n; right++) {
            char c = word.charAt(right);
            freq.put(c, freq.getOrDefault(c, 0) + 1);
            
            if (vowels.contains(c)) {
                if (freq.get(c) == 1) vowelCount++;
            } else {
                consonantCount++;
            }
            
            // Shrink the window when we exceed k consonants
            while (consonantCount > k) {
                char leftChar = word.charAt(left);
                freq.put(leftChar, freq.get(leftChar) - 1);
                if (freq.get(leftChar) == 0) {
                    freq.remove(leftChar);
                    if (vowels.contains(leftChar)) vowelCount--;
                }
                if (!vowels.contains(leftChar)) consonantCount--;
                left++;
            }

            // If we have all vowels at least once and k consonants, count valid substrings
            if (vowelCount == 5 && consonantCount == k) {
                result++;
            }
        }

        return result;
    }
}
